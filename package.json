{
  "name": "postcss-critical-css",
  "version": "3.0.7",
  "description": "Generate critical CSS using PostCSS",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/zgreen/postcss-critical-css"
  },
  "keywords": [
    "postcss-plugin",
    "postcss plugin",
    "postcss",
    "critical-css",
    "critical",
    "css",
    "critical css"
  ],
  "author": "Zach Green",
  "license": "MIT",
  "devDependencies": {
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-conventional": "^8.3.4",
    "babel-cli": "^6.26.0",
    "babel-eslint": "^7.2.3",
    "babel-plugin-transform-flow-strip-types": "^6.8.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-es2015": "^6.13.2",
    "eslint": "^3.3.1",
    "eslint-config-prettier": "^6.15.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-flowtype": "^2.50.3",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-node": "^4.2.3",
    "eslint-plugin-prettier": "^3.3.0",
    "eslint-plugin-promise": "^3.8.0",
    "eslint-plugin-standard": "^3.1.0",
    "flow-bin": "^0.100.0",
    "husky": "^3.1.0",
    "lint-staged": "^9.5.0",
    "minimist": "^1.2.5",
    "prettier": "1.19.1",
    "standard-version": "^8.0.1",
    "tape": "^4.13.3"
  },
  "scripts": {
    "build": "eslint src/** && npm run flow && babel src --out-dir dist",
    "example": "./node_modules/.bin/babel-node example/example.js",
    "flow": "flow; test $? -eq 0 -o $? -eq 2",
    "eslint": "eslint test/**/*.js && eslint src/**",
    "format": "prettier --write \"**/*.{js,md,yml,.babelrc,.eslintrc}\"",
    "prerelease": "npm run build && npm test",
    "pretest": "./node_modules/.bin/babel-node test/preTest.js",
    "release": "standard-version",
    "test": "npm run test-default && npm run test-no-preserve && npm run test-output-path && npm run test-output-dest && npm run test-no-args && npm run test-no-minify",
    "test-no-args": "npm run pretest -- --noArgs && tape test --noArgs --test=default",
    "test-no-minify": "npm run pretest -- --minify=false --fixtures-dir=fixtures-no-minify && tape test --fixtures-dir=fixtures-no-minify --test=default,this",
    "test-output-dest": "npm run pretest -- --outputDest='custom.css' --fixtures-dir=fixtures-output-dest && tape test --outputDest='custom.css' --fixtures-dir=fixtures-output-dest --test=default",
    "test-default": "npm run pretest && tape test",
    "test-no-preserve": "npm run pretest -- --fixtures-dir=fixtures-no-preserve --preserve=false && tape test --fixtures-dir=fixtures-no-preserve --preserve=false",
    "test-output-path": "npm run pretest -- --outputPath='test/fixtures-output-path' && tape test --outputPath='test/fixtures-output-path' --test=default"
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "cssnano": "^4.1.10",
    "fs-extra": "^8.1.0",
    "postcss": "^7.0.35"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.js": [
      "eslint -- --fix",
      "git add"
    ]
  }
}
